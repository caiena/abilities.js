{"version":3,"file":"abilities.cjs.js","sources":["../src/error.js","../src/utils.js","../src/rule.js","../src/ability.js","../src/async_ability.js","../src/builder.js","../src/async_builder.js","../src/index.js"],"sourcesContent":["function ForbiddenError(message, options = {}) {\n  Error.call(this);\n  this.constructor = ForbiddenError;\n  this.subject = options.subject;\n  this.subjectName = options.subjectName;\n  this.action = options.action;\n  this.field = options.field;\n  this.message = message || `Cannot execute \"${this.action}\" on \"${this.subjectName}\"`;\n\n  if (typeof Error.captureStackTrace === 'function') {\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = new Error(this.message).stack;\n  }\n}\n\nForbiddenError.prototype = Object.create(Error.prototype);\n\n\nexport { ForbiddenError }\n","export function isObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n  return prototype === null || prototype === Object.getPrototypeOf({})\n}\n\nexport function wrapArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport function getSubjectName(subject) {\n  if (!subject || typeof subject === 'string') {\n    return subject;\n  }\n\n  const Type = typeof subject === 'object' ? subject.constructor : subject;\n\n  return Type.modelName || Type.name;\n}\n\nexport function clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n","// Interface definition\n// interface Rule {\n//   actions: string | string[],\n//   subject: string | string[],\n//   fields?: string[],\n//   condition?: Object | Function,\n//   inverted?: boolean, // default is `false`\n//   reason?: string // mainly to specify why user can't do something. See forbidden reasons for details\n// }\n\n\nimport { isObject, wrapArray } from './utils'\n\nfunction get(obj, key) {\n  // TODO: support some kind of get() method?\n  // return typeof obj.get === 'function' ? obj.get(key) : obj[key]\n  return obj[key]\n}\n\n\nfunction isPartiallyEqual(target, obj) {\n  return Object.keys(obj).every(key => get(target, key) === obj[key])\n}\n\n\nfunction getConditionFn(condition) {\n  return (target) => isPartiallyEqual(target, condition)\n}\n\n\n\nclass Rule {\n  constructor(params) {\n    this.actions = params.actions || params.action\n    this.subject = params.subject\n    this.fields = !params.fields || params.fields.length === 0\n      ? undefined\n      : wrapArray(params.fields)\n    this.inverted = !!params.inverted\n    this.condition = params.condition\n    // this._matches = this.condition ? sift(this.condition) : undefined\n    this.reason = params.reason\n\n    if (this.condition == null) { // null or undefined\n      this._matches = undefined\n    } else if (isObject(this.condition)) {\n      this._matches = getConditionFn(this.condition)\n    } else if (typeof this.condition === 'function') {\n      this._matches = (target, fields) => this.condition(target, fields) // fn (object, fields) => boolean\n    } else {\n      throw Error(`Unsupported type for condition: ${typeof this.condition}`)\n    }\n  }\n\n  matches(target) {\n    if (!this._matches) return true\n    if (typeof target === 'string') return !this.inverted\n\n    return this._matches(target)\n  }\n\n  isRelevantFor(target, field) {\n    if (!this.fields) return true\n    if (!field) return !this.inverted\n\n    return this.fields.indexOf(field) !== -1\n  }\n}\n\n\nexport { Rule }\n","import { ForbiddenError } from './error'\nimport { Rule } from './rule'\nimport { wrapArray, getSubjectName, clone } from './utils'\n\n\nconst PRIVATE_FIELD = typeof Symbol !== 'undefined' ? Symbol('private') : `__${Date.now()}`\nconst ALIASES = {\n  crud: ['create', 'read', 'update', 'delete'],\n}\n\n\nfunction hasAction(action, actions) {\n  return action === actions || Array.isArray(actions) && actions.indexOf(action) !== -1\n}\n\n\nclass Ability {\n  static addAlias(alias, actions) {\n    if (alias === 'manage' || hasAction('manage', actions)) {\n      throw new Error('Cannot add alias for \"manage\" action because it represents any action')\n    }\n\n    if (hasAction(alias, actions)) {\n      throw new Error(`Attempt to alias action to itself: ${alias} -> ${actions.toString()}`)\n    }\n\n    ALIASES[alias] = actions\n    return this\n  }\n\n  constructor(rules, { RuleType = Rule, subjectName = getSubjectName } = {}) {\n    this.__private = {\n      RuleType,\n      subjectName,\n      originalRules: rules || [],\n      hasPerFieldRules: false,\n      indexedRules: Object.create(null),\n      mergedRules: Object.create(null),\n      events: {},\n      aliases: clone(ALIASES)\n    }\n    this.update(rules)\n  }\n\n  get __private() {\n    return this[PRIVATE_FIELD]\n  }\n\n  set __private(val) {\n    return this[PRIVATE_FIELD] = val\n  }\n\n  update(rules) {\n    if (!Array.isArray(rules)) {\n      return this\n    }\n\n    const payload = { rules, ability: this }\n\n    this.emit('update', payload)\n    this.__private.originalRules = rules.slice(0)\n    this.__private.mergedRules = Object.create(null)\n\n    const index = this.buildIndexFor(rules)\n\n    if (process.env.NODE_ENV != 'production' && index.isAllInverted && rules.length) {\n      // eslint-disable-next-line\n      // TODO: throw new Error()\n      console.warn('[abilities]: Ability contains only inverted rules. That means user will not be able to do any actions.')\n    }\n\n    this.__private.indexedRules = index.rules\n    this.__private.hasPerFieldRules = index.hasPerFieldRules\n\n    this.emit('updated', payload)\n\n    return this\n  }\n\n  buildIndexFor(rules) {\n    const indexedRules = Object.create(null)\n    const { RuleType } = this.__private\n    let isAllInverted = true\n    let hasPerFieldRules = false\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = new RuleType(rules[i])\n      const actions = this.expandActions(rule.actions)\n      const subjects = wrapArray(rule.subject)\n      const priority = rules.length - i - 1\n\n      isAllInverted = !!(isAllInverted && rule.inverted)\n\n      if (!hasPerFieldRules && rule.fields) {\n        hasPerFieldRules = true\n      }\n\n      // for (let k = 0; k < subjects.length; k++) {\n      //   const subject = subjects[k]\n      for (let subject of subjects) {\n        indexedRules[subject] = indexedRules[subject] || Object.create(null)\n\n        // for (let j = 0; j < actions.length; j++) {\n        //   const action = actions[j]\n        for (let action of actions) {\n          indexedRules[subject][action] = indexedRules[subject][action] || Object.create(null)\n          indexedRules[subject][action][priority] = rule\n        }\n      }\n    }\n\n    return {\n      isAllInverted,\n      hasPerFieldRules,\n      rules: indexedRules,\n    }\n  }\n\n  expandActions(rawActions) {\n    const { aliases } = this.__private\n    let actions = wrapArray(rawActions)\n    let i = 0\n\n    while (i < actions.length) {\n      const action = actions[i++]\n\n      if (aliases.hasOwnProperty(action)) {\n        actions = actions.concat(aliases[action])\n      }\n    }\n\n    return actions\n  }\n\n  get rules() {\n    return this.__private.originalRules\n  }\n\n  can(action, subject, field) {\n    if (field && typeof field !== 'string') {\n      // eslint-disable-next-line\n      throw new Error('[abilities]: Ability.can(action, subject, field) expects 3rd parameter (field) to be a string.')\n    }\n\n    const rule = this.relevantRuleFor(action, subject, field)\n\n    return !!rule && !rule.inverted\n  }\n\n  relevantRuleFor(action, subject, field) {\n    const rules = this.rulesFor(action, subject, field)\n\n    for (let i = 0; i < rules.length; i++) {\n      if (rules[i].matches(subject)) {\n        return rules[i]\n      }\n    }\n\n    return null\n  }\n\n  possibleRulesFor(action, subject) {\n    const subjectName = this.__private.subjectName(subject)\n    const { mergedRules } = this.__private\n    const key = `${subjectName}_${action}`\n\n    if (!mergedRules[key]) {\n      mergedRules[key] = this.mergeRulesFor(action, subjectName)\n    }\n\n    return mergedRules[key]\n  }\n\n  mergeRulesFor(action, subjectName) {\n    const { indexedRules } = this.__private\n    const mergedRules = [subjectName, 'all'].reduce((rules, subjectType) => {\n      const subjectRules = indexedRules[subjectType]\n\n      if (!subjectRules) {\n        return rules\n      }\n\n      return Object.assign(rules, subjectRules[action], subjectRules.manage)\n    }, [])\n\n    // TODO: think whether there is a better way to prioritize rules\n    // or convert sparse array to regular one\n    return mergedRules.filter(Boolean)\n  }\n\n  rulesFor(action, subject, field) {\n    const rules = this.possibleRulesFor(action, subject)\n\n    if (!this.__private.hasPerFieldRules) {\n      return rules\n    }\n\n    return rules.filter(rule => rule.isRelevantFor(subject, field))\n  }\n\n  cannot(...args) {\n    return !this.can(...args)\n  }\n\n  throwUnlessCan(...args) {\n    const rule = this.relevantRuleFor(...args)\n\n    if (!rule || rule.inverted) {\n      const [action, subject, field] = args\n      const subjectName = this.__private.subjectName(subject)\n\n      throw new ForbiddenError(rule ? rule.reason : null, {\n        action,\n        subjectName,\n        subject,\n        field\n      })\n    }\n  }\n\n  on(event, handler) {\n    const { events } = this.__private\n    let isAttached = true\n\n    if (!events[event]) {\n      events[event] = []\n    }\n\n    events[event].push(handler)\n\n    return () => {\n      if (isAttached) {\n        const index = events[event].indexOf(handler)\n        events[event].splice(index, 1)\n        isAttached = false\n      }\n    }\n  }\n\n  emit(event, payload) {\n    const handlers = this.__private.events[event]\n\n    if (handlers) {\n      handlers.slice(0).forEach(handler => handler(payload))\n    }\n  }\n}\n\n\nexport { Ability }\n","import { Ability } from './ability'\nimport { ForbiddenError } from './error'\nimport { Rule } from './rule'\n\n\nclass AsyncAbility extends Ability {\n\n  // override\n  // - async\n  async relevantRuleFor(action, subject, field) {\n    const rules = this.rulesFor(action, subject, field)\n\n    for (let rule of rules) {\n      if (await rule.matches(subject)) {\n        return rule\n      }\n    }\n\n    return null\n  }\n\n  // override\n  // - async\n  async can(action, subject, field) {\n    if (field && typeof field !== 'string') {\n      // eslint-disable-next-line\n      throw new Error('[abilities]: Ability.can(action, subject, field) expects 3rd parameter (field) to be a string.')\n    }\n\n    const rule = await this.relevantRuleFor(action, subject, field)\n\n    return !!rule && !rule.inverted\n  }\n\n\n  // override\n  // - async\n  async cannot(...args) {\n    let can = await this.can(...args)\n\n    return !can\n  }\n\n  // override\n  // - async\n  async throwUnlessCan(...args) {\n    const rule = await this.relevantRuleFor(...args)\n\n    if (!rule || rule.inverted) {\n      const [action, subject, field] = args\n      const subjectName = this.__private.subjectName(subject)\n\n      throw new ForbiddenError(rule ? rule.reason : null, {\n        action,\n        subjectName,\n        subject,\n        field\n      })\n    }\n  }\n} // [end] class AsyncAbility\n\n\nexport { AsyncAbility }\n","import { Ability } from './ability'\nimport { AsyncAbility } from './async_ability'\nimport { getSubjectName, isObject } from './utils'\n\n\nconst PRIVATE_FIELD = typeof Symbol !== 'undefined' ? Symbol('private') : `__${Date.now()}`\n\nfunction isStringOrNonEmptyArray(value) {\n  return ![].concat(value).some(item => typeof item !== 'string')\n}\n\n\nclass RuleBuilder {\n  constructor(rule) {\n    this.rule = rule\n  }\n\n  because(reason) {\n    this.rule.reason = reason\n    return this\n  }\n}\n\n\nclass AbilityBuilder {\n  static define(dsl, options = {}) {\n    const builder = new this()\n    const result = dsl(builder.can.bind(builder), builder.cannot.bind(builder))\n\n    const AbilityClass = options.async ? AsyncAbility : Ability\n    const buildAbility = () => new  AbilityClass(builder.rules, options)\n\n    return result && (typeof result.then === 'function') ?\n      result.then(buildAbility) :\n      buildAbility()\n  }\n\n  static extract() {\n    const builder = new this()\n\n    return {\n      can: builder.can.bind(builder),\n      cannot: builder.cannot.bind(builder),\n      rules: builder.rules,\n    }\n  }\n\n  constructor({ subjectName = getSubjectName } = {}) {\n    this.rules = []\n    this.__private = {\n      subjectName,\n    }\n  }\n\n  get __private() {\n    return this[PRIVATE_FIELD]\n  }\n\n  set __private(val) {\n    return this[PRIVATE_FIELD] = val\n  }\n\n\n  can(actions, subject, fieldsOrCondition, condition) {\n    if (!isStringOrNonEmptyArray(actions)) {\n      throw new TypeError('AbilityBuilder#can expects the first parameter to be an action or array of actions')\n    }\n\n    const subjectName = [].concat(subject).map(this.__private.subjectName)\n\n    if (!isStringOrNonEmptyArray(subjectName)) {\n      throw new TypeError('AbilityBuilder#can expects the second argument to be a subject name/type or an array of subject names/types')\n    }\n\n    const rule = { actions, subject: subjectName }\n\n    if (Array.isArray(fieldsOrCondition) || typeof fieldsOrCondition === 'string') {\n      rule.fields = fieldsOrCondition\n    }\n\n    // old code: replaced by below if/else\n    // if (isObject(condition) || !rule.fields && isObject(fieldsOrCondition)) {\n    //   rule.condition = condition || fieldsOrCondition\n    // }\n    if (!rule.fields && (isObject(fieldsOrCondition) || typeof fieldsOrCondition === 'function')) {\n      rule.condition = fieldsOrCondition\n    } else if (condition) {\n      rule.condition = condition\n    }\n\n\n    this.rules.push(rule)\n\n    return new RuleBuilder(rule)\n  }\n\n  cannot(...args) {\n    const builder = this.can(...args)\n    builder.rule.inverted = true\n\n    return builder\n  }\n}\n\n\nexport { AbilityBuilder, RuleBuilder }\n","import { Ability }        from './ability'\nimport { AbilityBuilder } from './builder'\nimport { AsyncAbility }   from './async_ability'\n\n\nclass AsyncAbilityBuilder extends AbilityBuilder {\n  static define(dsl, options = {}) {\n    const builder = new this()\n    const result = dsl(builder.can.bind(builder), builder.cannot.bind(builder))\n\n    const AbilityClass = AsyncAbility\n    const buildAbility = () => new  AbilityClass(builder.rules, options)\n\n    return result && (typeof result.then === 'function') ?\n      result.then(buildAbility) :\n      buildAbility()\n  }\n}\n\n\nexport { AsyncAbilityBuilder }\n","// import { Ability }        from './ability'\n// import { AsyncAbility }   from './async_ability'\n// import { AbilityBuilder } from './builder'\n// import { Rule }           from './rule'\n// import { ForbiddenError } from './error'\n\n\n// export {\n//   Ability,\n//   AsyncAbility,\n//   AbilityBuilder,\n//   Rule,\n//   ForbiddenError,\n// }\n\n\nexport * from './ability';\nexport * from './async_ability';\nexport * from './rule';\nexport * from './builder';\nexport * from './async_builder';\nexport * from './error';\n"],"names":["ForbiddenError","message","options","Error","call","constructor","subject","subjectName","action","field","captureStackTrace","name","stack","prototype","Object","create","isObject","value","toString","getPrototypeOf","wrapArray","Array","isArray","getSubjectName","Type","modelName","clone","object","JSON","parse","stringify","get","obj","key","isPartiallyEqual","target","keys","every","getConditionFn","condition","Rule","params","actions","fields","length","undefined","inverted","reason","_matches","indexOf","PRIVATE_FIELD","Symbol","Date","now","ALIASES","crud","hasAction","Ability","alias","rules","RuleType","__private","originalRules","hasPerFieldRules","indexedRules","mergedRules","events","aliases","update","payload","ability","emit","slice","index","buildIndexFor","process","env","NODE_ENV","isAllInverted","console","warn","i","rule","expandActions","subjects","priority","rawActions","hasOwnProperty","concat","relevantRuleFor","rulesFor","matches","mergeRulesFor","reduce","subjectType","subjectRules","assign","manage","filter","Boolean","possibleRulesFor","isRelevantFor","can","args","event","handler","isAttached","push","splice","handlers","forEach","val","AsyncAbility","isStringOrNonEmptyArray","some","item","RuleBuilder","AbilityBuilder","dsl","builder","result","bind","cannot","AbilityClass","async","buildAbility","then","fieldsOrCondition","TypeError","map","AsyncAbilityBuilder"],"mappings":"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"}